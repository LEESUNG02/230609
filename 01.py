# 불(Bool)과 비교, 논리 연산자
## 불과 비교 연산자 사용하기
'''
* 프로그래밍 -> 참, 거짓 판단 -> 참(True) : 어떠한 조건이나 수식을 만족시키는가? / 거짓(False) : 만족시키지 못한다
* 불(Bool) 혹은 불리언(Boolean) : 참과 거짓으로 구성된 자료형. <- 조건이나 수식들이 존재하게 됨.
* 두 값의 관계를 판단하는 비교 연산자 / 두 값의 논리적 관계를 판단하는 논리 연산자
* if, while.. 구문을 작성.
'''
print(True, False)  # 다른 언어들은 대개 true, false
print(int(True), int(False))  # 1, 0

# 비교 연산자 - 판단 결과
## 등호(같다, 다르다)와 부등호(크다, 작다). -> 비교하는 식이 맞으면 True 아니면 False
print('10 > 5', '10이 5보다 크다, 10은 5를 초과한다', 10 > 5)  # 초과
print('10 < 5', '10이 5보다 작다, 10은 5의 미만이다', 10 < 5)  # 미만

## 숫자가 같은지 다른지 비교
'''
* 일반적 수학에서는 =(등호)로 쓰는데, 파이썬 등 프로그래밍에서는 ==을 등호(동등 연산자, equal)로 쓴다
* =은 파이썬 뭐에요? -> 대입 연산자 -> 특정한 변수에 값을 할당해주는 연산자
* 다를 때 !=(not equal)을 사용
'''
print("1 == 1 :", 1 == 1)
print("2 == 1 :", 2 == 1)
print("1 != 1 :", 1 != 1)

## 문자열 동등 여부 비교 (only)
print("'python' == 'python'", "python" == "python")  # java == X. equals -> 주소값을 비교하니까.
print("'Python' == 'python'", "Python" == "python")  # 대소문자가 다르면 다른 문자!!!!
print("'Python' != 'python'", "Python" != "python")  # 대소문자가 다르면 다른 문자!!!!

# 숫자 비교 : 부등호
print("10 > 20", 10 > 20)  # 초과 (왼쪽 값 기준으로 생각)
print("10 < 20", 10 < 20)  # 미만
print("10 >= 20", 10 >= 20)  # 이상
print("10 <= 20", 10 <= 20)  # 이하

# 객체가 같은지 다른지 비교하기
'''
* is, is not -> 연산자. ==, !=. 왜 is(~이다), is not(~는 ~가 아니다)?
* ==, != : 값 자체를 비교한다
* is, is not -> 객체를 비교한다, 객체 주소를 비교한다(타입) 
'''
# 정수 1과 실수 1.0은 까다롭게 생각하면 다른 애들.
print("1 == 1.0 :", 1 == 1.0)  # 1이라고 하는 '값'은 같아요 (상호 변환이 가능) - 같은 숫자형일 경우에는 같다고 침
print("'1' == 1 :", '1' == 1)  # 문자열과 숫자의 비교이므로 성립 안함
# a = 1 is 1.0 # 비교 연산의 결과값을 변수에 담을 수 있음
# print("1 is 1.0 :", a)
# b = (1 is not 1.0)
# print("1 is not 1.0 :")
# print(b)